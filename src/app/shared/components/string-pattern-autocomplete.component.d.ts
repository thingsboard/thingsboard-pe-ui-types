import { ChangeDetectorRef, DestroyRef, ElementRef, OnChanges, OnInit, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';
import { ControlValueAccessor, FormBuilder, FormControl } from '@angular/forms';
import { TranslateService } from '@ngx-translate/core';
import { MatFormFieldAppearance, SubscriptSizing } from '@angular/material/form-field';
import { Overlay } from '@angular/cdk/overlay';
import * as i0 from "@angular/core";
export declare class StringPatternAutocompleteComponent implements ControlValueAccessor, OnInit, OnChanges {
    private fb;
    private overlay;
    private translate;
    private viewContainerRef;
    private destroyRef;
    private cd;
    inputRef: ElementRef;
    highlightTextRef: ElementRef;
    autocompleteTemplate: TemplateRef<any>;
    disabled: boolean;
    required: boolean;
    predefinedValues: Array<string>;
    placeholderText: string;
    subscriptSizing: SubscriptSizing;
    additionalClass: string | string[] | Record<string, boolean | undefined | null>;
    appearance: MatFormFieldAppearance;
    label: string;
    tooltipClass: string;
    errorText: string;
    showInlineError: boolean;
    patternSymbol: string;
    selectionFormControl: FormControl;
    filteredOptions: Array<string>;
    searchText: string;
    highlightedHtml: string;
    private modelValue;
    private overlayRef;
    private propagateChange;
    constructor(fb: FormBuilder, overlay: Overlay, translate: TranslateService, viewContainerRef: ViewContainerRef, destroyRef: DestroyRef, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    writeValue(option?: string): void;
    onFocus(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(_fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    onInputScroll(event: Event): void;
    optionSelected(value: string): void;
    private updateView;
    private onSelectionChange;
    private getHighlightHtml;
    private getFilteredOptions;
    private openAutocomplete;
    private closeAutocomplete;
    private getOverlayPosition;
    private setStrategyPositions;
    static ɵfac: i0.ɵɵFactoryDeclaration<StringPatternAutocompleteComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<StringPatternAutocompleteComponent, "tb-string-pattern-autocomplete", never, { "disabled": { "alias": "disabled"; "required": false; }; "required": { "alias": "required"; "required": false; }; "predefinedValues": { "alias": "predefinedValues"; "required": true; }; "placeholderText": { "alias": "placeholderText"; "required": false; }; "subscriptSizing": { "alias": "subscriptSizing"; "required": false; }; "additionalClass": { "alias": "additionalClass"; "required": false; }; "appearance": { "alias": "appearance"; "required": false; }; "label": { "alias": "label"; "required": false; }; "tooltipClass": { "alias": "tooltipClass"; "required": false; }; "errorText": { "alias": "errorText"; "required": false; }; "showInlineError": { "alias": "showInlineError"; "required": false; }; "patternSymbol": { "alias": "patternSymbol"; "required": false; }; }, {}, never, never, false, never>;
}
