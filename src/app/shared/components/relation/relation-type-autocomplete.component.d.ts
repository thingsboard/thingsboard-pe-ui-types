import { AfterViewInit, ElementRef, OnDestroy, OnInit } from '@angular/core';
import { ControlValueAccessor, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { Observable } from 'rxjs';
import { Store } from '@ngrx/store';
import { AppState } from '@app/core/core.state';
import { TranslateService } from '@ngx-translate/core';
import { BroadcastService } from '@app/core/services/broadcast.service';
import { FloatLabelType, MatFormFieldAppearance, SubscriptSizing } from '@angular/material/form-field';
import * as i0 from "@angular/core";
export declare class RelationTypeAutocompleteComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnDestroy {
    private store;
    private broadcast;
    translate: TranslateService;
    private fb;
    relationTypeFormGroup: UntypedFormGroup;
    modelValue: string | null;
    label: string;
    additionalClasses: Array<string>;
    appearance: MatFormFieldAppearance;
    floatLabel: FloatLabelType;
    required: boolean;
    disabled: boolean;
    subscriptSizing: SubscriptSizing;
    relationTypeInput: ElementRef;
    filteredRelationTypes: Observable<Array<string>>;
    searchText: string;
    private dirty;
    private propagateChange;
    constructor(store: Store<AppState>, broadcast: BroadcastService, translate: TranslateService, fb: UntypedFormBuilder);
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    setDisabledState(isDisabled: boolean): void;
    writeValue(value: string | null): void;
    onFocus(): void;
    updateView(value: string | null): void;
    displayRelationTypeFn(relationType?: string): string | undefined;
    fetchRelationTypes(searchText?: string, strictMatch?: boolean): Observable<Array<string>>;
    clear(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RelationTypeAutocompleteComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RelationTypeAutocompleteComponent, "tb-relation-type-autocomplete", never, { "label": "label"; "additionalClasses": "additionalClasses"; "appearance": "appearance"; "floatLabel": "floatLabel"; "required": "required"; "disabled": "disabled"; "subscriptSizing": "subscriptSizing"; }, {}, never, never, false, never>;
}
