import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnChanges, Renderer2, SimpleChanges, Type, ViewContainerRef } from '@angular/core';
import { MarkdownService } from 'ngx-markdown';
import { DynamicComponentFactoryService } from '@core/services/dynamic-component-factory.service';
import * as i0 from "@angular/core";
export declare class TbMarkdownComponent implements OnChanges {
    private cd;
    private zone;
    markdownService: MarkdownService;
    private sharedModule;
    private dynamicComponentFactoryService;
    private renderer;
    markdownContainer: ViewContainerRef;
    fallbackElement: ElementRef<HTMLElement>;
    data: string | undefined;
    context: any;
    additionalCompileModules: Type<any>[];
    markdownClass: string | undefined;
    containerClass: string | undefined;
    style: {
        [klass: string]: any;
    };
    applyDefaultMarkdownStyle: boolean;
    additionalStyles: string[];
    lineNumbers: boolean;
    fallbackToPlainMarkdown: boolean;
    usePlainMarkdown: boolean;
    ready: EventEmitter<void>;
    isMarkdownReady: boolean;
    error: any;
    private tbMarkdownInstanceComponentRef;
    private tbMarkdownInstanceComponentType;
    constructor(cd: ChangeDetectorRef, zone: NgZone, markdownService: MarkdownService, sharedModule: Type<any>, dynamicComponentFactoryService: DynamicComponentFactoryService, renderer: Renderer2);
    ngOnChanges(changes: SimpleChanges): void;
    private render;
    private handleError;
    private plainMarkdown;
    private handlePlugins;
    private setPluginClass;
    private handleImages;
    private sanitize;
    private destroyMarkdownInstanceResources;
    static ɵfac: i0.ɵɵFactoryDeclaration<TbMarkdownComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TbMarkdownComponent, "tb-markdown", never, { "data": { "alias": "data"; "required": false; }; "context": { "alias": "context"; "required": false; }; "additionalCompileModules": { "alias": "additionalCompileModules"; "required": false; }; "markdownClass": { "alias": "markdownClass"; "required": false; }; "containerClass": { "alias": "containerClass"; "required": false; }; "style": { "alias": "style"; "required": false; }; "applyDefaultMarkdownStyle": { "alias": "applyDefaultMarkdownStyle"; "required": false; }; "additionalStyles": { "alias": "additionalStyles"; "required": false; }; "lineNumbers": { "alias": "lineNumbers"; "required": false; }; "fallbackToPlainMarkdown": { "alias": "fallbackToPlainMarkdown"; "required": false; }; "usePlainMarkdown": { "alias": "usePlainMarkdown"; "required": false; }; }, { "ready": "ready"; }, never, never, false, never>;
}
