import { AfterViewInit, ChangeDetectorRef, DestroyRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, ViewContainerRef } from '@angular/core';
import { ReportComponentConfig } from '@shared/models/report-component.models';
import { ReportComponentTypeData } from '@home/pages/reporting/template/components/report-component.models';
import { TbAnchorComponent } from '@shared/components/tb-anchor.component';
import { ReportComponentsComponent } from '@home/pages/reporting/template/components/report-components.component';
import { TbReportFormat } from '@shared/models/report.models';
import * as i0 from "@angular/core";
export declare class ReportComponentComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {
    private reportComponents;
    private elementRef;
    private container;
    private renderer;
    private destroyRef;
    private cd;
    reportComponentElement: import("@angular/core").Signal<ElementRef<any>>;
    class: string;
    background: string;
    borderWidth: number;
    borderRadius: number;
    borderColor: string;
    borderStyle: string;
    marginLeft: number;
    marginRight: number;
    marginTop: number;
    marginBottom: number;
    paddingLeft: number;
    paddingRight: number;
    paddingTop: number;
    paddingBottom: number;
    display: string;
    position: string;
    reportComponent: ReportComponentConfig;
    format: TbReportFormat;
    dragging: boolean;
    scale: number;
    width: number;
    pageMarginLeft: number;
    pageMarginRight: number;
    last: boolean;
    edit: EventEmitter<any>;
    makeCopy: EventEmitter<any>;
    remove: EventEmitter<any>;
    reportPreviewContainer: TbAnchorComponent;
    typeData: ReportComponentTypeData;
    hovered: boolean;
    selected: boolean;
    get isPlainFormat(): boolean;
    private editReportComponentTooltip;
    private reportComponentPreview;
    private reportComponentHeight;
    constructor(reportComponents: ReportComponentsComponent, elementRef: ElementRef<HTMLElement>, container: ViewContainerRef, renderer: Renderer2, destroyRef: DestroyRef, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onEdit(event: MouseEvent): void;
    onCopy(event: MouseEvent): void;
    onRemove(event: MouseEvent): void;
    mouseEnter(event: MouseEvent): void;
    mouseLeave(_event: MouseEvent): void;
    private updateComponentSize;
    private updateComponentLayout;
    componentUpdated(): void;
    private initEditReportComponentTooltip;
    static ɵfac: i0.ɵɵFactoryDeclaration<ReportComponentComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ReportComponentComponent, "tb-report-component", never, { "reportComponent": { "alias": "reportComponent"; "required": false; }; "format": { "alias": "format"; "required": false; }; "dragging": { "alias": "dragging"; "required": false; }; "scale": { "alias": "scale"; "required": false; }; "width": { "alias": "width"; "required": false; }; "pageMarginLeft": { "alias": "pageMarginLeft"; "required": false; }; "pageMarginRight": { "alias": "pageMarginRight"; "required": false; }; "last": { "alias": "last"; "required": false; }; "selected": { "alias": "selected"; "required": false; }; }, { "edit": "edit"; "makeCopy": "makeCopy"; "remove": "remove"; }, never, never, false, never>;
}
export declare class EditReportComponentTooltipComponent implements AfterViewInit {
    element: ElementRef<HTMLElement>;
    cd: ChangeDetectorRef;
    container: ReportComponentComponent;
    viewInited: EventEmitter<any>;
    constructor(element: ElementRef<HTMLElement>, cd: ChangeDetectorRef);
    ngAfterViewInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<EditReportComponentTooltipComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<EditReportComponentTooltipComponent, "ng-component", never, { "container": { "alias": "container"; "required": false; }; }, { "viewInited": "viewInited"; }, never, never, false, never>;
}
export declare abstract class AbstractReportComponentPreview<C extends ReportComponentConfig = ReportComponentConfig> implements OnInit {
    width: string;
    reportComponent: C;
    format: TbReportFormat;
    contentResized: EventEmitter<any>;
    get isPlainFormat(): boolean;
    protected cd: ChangeDetectorRef;
    ngOnInit(): void;
    componentUpdated(): void;
    protected onComponentUpdated(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AbstractReportComponentPreview<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AbstractReportComponentPreview<any>, never, never, { "reportComponent": { "alias": "reportComponent"; "required": false; }; "format": { "alias": "format"; "required": false; }; }, { "contentResized": "contentResized"; }, never, never, false, never>;
}
