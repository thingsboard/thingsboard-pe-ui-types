import { ActivatedRouteSnapshot } from '@angular/router';
import { EntityTableConfig } from '@home/models/entity/entities-table-config.models';
import { TranslateService } from '@ngx-translate/core';
import { DatePipe } from '@angular/common';
import { EntityAction } from '@home/models/entity/entity-component.models';
import { UserPermissionsService } from '@core/http/user-permissions.service';
import { ScheduledReportInfo } from '@shared/models/report.models';
import { UtilsService } from '@core/services/utils.service';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { SchedulerEventService } from '@core/http/scheduler-event.service';
import { MatDialog } from '@angular/material/dialog';
import { TbPopoverService } from '@shared/components/popover.service';
import * as i0 from "@angular/core";
export declare class ScheduledReportsTableConfigResolver {
    private store;
    private schedulerEventService;
    private userPermissionsService;
    private dialog;
    private translate;
    private utils;
    private datePipe;
    private popoverService;
    constructor(store: Store<AppState>, schedulerEventService: SchedulerEventService, userPermissionsService: UserPermissionsService, dialog: MatDialog, translate: TranslateService, utils: UtilsService, datePipe: DatePipe, popoverService: TbPopoverService);
    resolve(_route: ActivatedRouteSnapshot): EntityTableConfig<ScheduledReportInfo>;
    private configDefaults;
    private configureColumns;
    private configureEntityFunctions;
    private configureCellActions;
    private configureGroupActions;
    private enableScheduledReport;
    private addScheduledReport;
    private editScheduledReport;
    private openScheduledReportDialog;
    private toggleVersionControl;
    onScheduledReportAction(_action: EntityAction<ScheduledReportInfo>, _config: EntityTableConfig<ScheduledReportInfo>): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<ScheduledReportsTableConfigResolver, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ScheduledReportsTableConfigResolver>;
}
