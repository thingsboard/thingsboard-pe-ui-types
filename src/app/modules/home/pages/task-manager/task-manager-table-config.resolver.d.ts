import { EntityTableConfig } from '@home/models/entity/entities-table-config.models';
import { TranslateService } from '@ngx-translate/core';
import { DatePipe } from '@angular/common';
import { UserPermissionsService } from '@core/http/user-permissions.service';
import { Job, TaskManagerConfig } from '@shared/models/job.models';
import { JobService } from '@core/http/job.service';
import { TbPopoverService } from '@shared/components/popover.service';
import { DialogService } from '@core/services/dialog.service';
import { ActivatedRoute, Router } from '@angular/router';
import * as i0 from "@angular/core";
export declare class TaskManagerTableConfigResolver {
    private jobService;
    private popoverService;
    private userPermissionsService;
    private translate;
    private datePipe;
    private dialogService;
    private router;
    private readonly config;
    constructor(jobService: JobService, popoverService: TbPopoverService, userPermissionsService: UserPermissionsService, translate: TranslateService, datePipe: DatePipe, dialogService: DialogService, router: Router);
    resolve(): EntityTableConfig<Job>;
    private fetchJobs;
    private configureCellActions;
    private configureGroupActions;
    private taskStatus;
    private taskStatusStyle;
    private progressBarCellStyle;
    private progressBarStyle;
    private progressBar;
    private openTaskInfo;
    private openTaskParameters;
    private cancelOrDeleteTask;
    private cancelTaskDialog;
    private cancelTasks;
    private deleteTaskDialog;
    private deleteTasks;
    onLoadAction(config: TaskManagerConfig, route: ActivatedRoute): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TaskManagerTableConfigResolver, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<TaskManagerTableConfigResolver>;
}
