import { AfterViewInit, ChangeDetectorRef, ComponentFactoryResolver, ElementRef, Injector, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';
import { ErrorStateMatcher } from '@angular/material/core';
import { MatDialogRef } from '@angular/material/dialog';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { EntityType, EntityTypeResource, EntityTypeTranslation } from '@shared/models/entity-type.models';
import { BaseData, HasId } from '@shared/models/base-data';
import { EntityId } from '@shared/models/id/entity-id';
import { TbAnchorComponent } from '@shared/components/tb-anchor.component';
import { DialogComponent } from '@shared/components/dialog.component';
import { Router } from '@angular/router';
import { GroupEntityComponent } from '@home/components/group/group-entity.component';
import { GroupEntityTableConfig } from '@home/models/group/group-entities-table-config.models';
import { AddGroupEntityDialogData } from '@home/models/group/group-entity-component.models';
import { EntityGroupInfo } from '@shared/models/entity-group.models';
import { EntityService } from '@core/http/entity.service';
import { EntityTableConfig } from '@home/models/entity/entities-table-config.models';
import { UserPermissionsService } from '@core/http/user-permissions.service';
import { EntityInfoData } from '@shared/models/entity.models';
import { MatStepper } from '@angular/material/stepper';
import { StepperSelectionEvent } from '@angular/cdk/stepper';
import { BreakpointObserver } from '@angular/cdk/layout';
import * as i0 from "@angular/core";
export declare class AddGroupEntityDialogComponent extends DialogComponent<AddGroupEntityDialogComponent, BaseData<HasId>> implements OnInit, OnDestroy, AfterViewInit {
    protected store: Store<AppState>;
    protected router: Router;
    data: AddGroupEntityDialogData<BaseData<HasId>>;
    dialogRef: MatDialogRef<AddGroupEntityDialogComponent, BaseData<HasId>>;
    private componentFactoryResolver;
    private injector;
    private errorStateMatcher;
    private entityService;
    private userPermissionsService;
    private breakpointObserver;
    private cd;
    private fb;
    addGroupEntityWizardStepper: MatStepper;
    detailsFormStepContainerRef: ViewContainerRef;
    entityDetailsFormAnchor: TbAnchorComponent;
    ownersAndGroup: ElementRef;
    style: {} | {};
    selectedIndex: number;
    showNext: boolean;
    labelPosition: 'bottom' | 'end';
    entityComponent: GroupEntityComponent<BaseData<HasId>>;
    detailsForm: UntypedFormGroup;
    ownerAndGroupsFormGroup: UntypedFormGroup;
    entitiesTableConfig: EntityTableConfig<BaseData<HasId>> | GroupEntityTableConfig<BaseData<HasId>>;
    customerId: string;
    entityGroup: EntityGroupInfo;
    entityType: EntityType;
    translations: EntityTypeTranslation;
    resources: EntityTypeResource<BaseData<HasId>>;
    entity: BaseData<EntityId>;
    groupMode: boolean;
    initialOwnerId: EntityId;
    initialGroups: EntityInfoData[];
    addDialogOwnerAndGroupWizard: boolean;
    private subscriptions;
    constructor(store: Store<AppState>, router: Router, data: AddGroupEntityDialogData<BaseData<HasId>>, dialogRef: MatDialogRef<AddGroupEntityDialogComponent, BaseData<HasId>>, componentFactoryResolver: ComponentFactoryResolver, injector: Injector, errorStateMatcher: ErrorStateMatcher, entityService: EntityService, userPermissionsService: UserPermissionsService, breakpointObserver: BreakpointObserver, cd: ChangeDetectorRef, fb: UntypedFormBuilder);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    helpLinkId(): string;
    cancel(): void;
    previousStep(): void;
    nextStep(): void;
    getFormLabel(index: number): string;
    get maxStepperIndex(): number;
    add(): void;
    allValid(): boolean;
    changeStep($event: StepperSelectionEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AddGroupEntityDialogComponent, [null, null, null, null, null, null, { skipSelf: true; }, null, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AddGroupEntityDialogComponent, "tb-add-group-entity-dialog", never, {}, {}, never, never, false, never>;
}
