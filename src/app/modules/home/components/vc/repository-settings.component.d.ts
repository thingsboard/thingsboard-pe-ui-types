import { DestroyRef, OnInit } from '@angular/core';
import { PageComponent } from '@shared/components/page.component';
import { FormGroupDirective, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { AdminService } from '@core/http/admin.service';
import { RepositoryAuthMethod, RepositorySettings } from '@shared/models/settings.models';
import { TranslateService } from '@ngx-translate/core';
import { DialogService } from '@core/services/dialog.service';
import { TbPopoverComponent } from '@shared/components/popover.component';
import { UserPermissionsService } from '@core/http/user-permissions.service';
import * as i0 from "@angular/core";
export declare class RepositorySettingsComponent extends PageComponent implements OnInit {
    protected store: Store<AppState>;
    private adminService;
    private dialogService;
    private translate;
    private userPermissionsService;
    fb: UntypedFormBuilder;
    private destroyRef;
    detailsMode: boolean;
    popoverComponent: TbPopoverComponent;
    hideLoadingBar: boolean;
    repositorySettingsForm: UntypedFormGroup;
    settings: RepositorySettings;
    repositoryAuthMethod: typeof RepositoryAuthMethod;
    repositoryAuthMethods: RepositoryAuthMethod[];
    repositoryAuthMethodTranslations: Map<RepositoryAuthMethod, string>;
    readonly: boolean;
    allowDelete: boolean;
    constructor(store: Store<AppState>, adminService: AdminService, dialogService: DialogService, translate: TranslateService, userPermissionsService: UserPermissionsService, fb: UntypedFormBuilder, destroyRef: DestroyRef);
    ngOnInit(): void;
    checkAccess(): void;
    save(): void;
    delete(formDirective: FormGroupDirective): void;
    updateValidators(emitEvent?: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RepositorySettingsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RepositorySettingsComponent, "tb-repository-settings", never, { "detailsMode": { "alias": "detailsMode"; "required": false; }; "popoverComponent": { "alias": "popoverComponent"; "required": false; }; "hideLoadingBar": { "alias": "hideLoadingBar"; "required": false; }; }, {}, never, never, false, never>;
}
