import { DestroyRef, EventEmitter, OnInit } from '@angular/core';
import { PageComponent } from '@shared/components/page.component';
import { TbPopoverComponent } from '@shared/components/popover.component';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { WidgetService } from '@core/http/widget.service';
import { DataLayerColorSettings, DataLayerColorType } from '@shared/models/widget/maps/map.models';
import { DatasourceType, widgetType } from '@shared/models/widget.models';
import { DataKeyType } from '@shared/models/telemetry/telemetry.models';
import { MapSettingsContext } from '@home/components/widget/lib/settings/common/map/map-settings.component.models';
import * as i0 from "@angular/core";
export declare class DataLayerColorSettingsPanelComponent extends PageComponent implements OnInit {
    private fb;
    private widgetService;
    protected store: Store<AppState>;
    private destroyRef;
    widgetType: typeof widgetType;
    DataKeyType: typeof DataKeyType;
    colorSettings: DataLayerColorSettings;
    context: MapSettingsContext;
    dsType: DatasourceType;
    dsEntityAliasId: string;
    dsDeviceId: string;
    helpId: string;
    popover: TbPopoverComponent<DataLayerColorSettingsPanelComponent>;
    colorSettingsApplied: EventEmitter<DataLayerColorSettings>;
    DataLayerColorType: typeof DataLayerColorType;
    colorSettingsFormGroup: UntypedFormGroup;
    functionScopeVariables: string[];
    constructor(fb: UntypedFormBuilder, widgetService: WidgetService, store: Store<AppState>, destroyRef: DestroyRef);
    ngOnInit(): void;
    cancel(): void;
    applyColorSettings(): void;
    editRangeKey(): void;
    private updateValidators;
    static ɵfac: i0.ɵɵFactoryDeclaration<DataLayerColorSettingsPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DataLayerColorSettingsPanelComponent, "tb-data-layer-color-settings-panel", never, { "colorSettings": { "alias": "colorSettings"; "required": false; }; "context": { "alias": "context"; "required": false; }; "dsType": { "alias": "dsType"; "required": false; }; "dsEntityAliasId": { "alias": "dsEntityAliasId"; "required": false; }; "dsDeviceId": { "alias": "dsDeviceId"; "required": false; }; "helpId": { "alias": "helpId"; "required": false; }; "popover": { "alias": "popover"; "required": false; }; }, { "colorSettingsApplied": "colorSettingsApplied"; }, never, never, false, never>;
}
