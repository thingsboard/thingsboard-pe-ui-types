import { DestroyRef, EventEmitter, OnInit } from '@angular/core';
import { TbPopoverComponent } from '@shared/components/popover.component';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { ContentType, ValueType } from '@shared/models/constants';
import { FormProperty, FormPropertyType } from '@shared/models/dynamic-form.models';
import { StringItemsOption } from '@shared/components/string-items-list.component';
import * as i0 from "@angular/core";
export declare class DynamicFormPropertyPanelComponent implements OnInit {
    private fb;
    private destroyRef;
    ValueType: typeof ValueType;
    FormPropertyType: typeof FormPropertyType;
    ContentType: typeof ContentType;
    formPropertyTypes: FormPropertyType[];
    arrayItemFormPropertyTypes: (FormPropertyType.text | FormPropertyType.number | FormPropertyType.password | FormPropertyType.textarea | FormPropertyType.switch | FormPropertyType.select | FormPropertyType.radios | FormPropertyType.datetime | FormPropertyType.image | FormPropertyType.javascript | FormPropertyType.json | FormPropertyType.html | FormPropertyType.css | FormPropertyType.markdown | FormPropertyType.color | FormPropertyType.color_settings | FormPropertyType.font | FormPropertyType.units | FormPropertyType.icon | FormPropertyType.cssSize | FormPropertyType.fieldset | FormPropertyType.htmlSection)[];
    formPropertyTypeTranslations: Map<FormPropertyType, string>;
    formPropertyRowClasses: StringItemsOption[];
    formPropertyFieldClasses: StringItemsOption[];
    isPropertyTypeAllowedForRow: (type: FormPropertyType) => boolean;
    get propertyItemType(): FormPropertyType | any;
    get isArray(): boolean;
    isAdd: boolean;
    property: FormProperty;
    booleanPropertyIds: string[];
    disabled: boolean;
    popover: TbPopoverComponent<DynamicFormPropertyPanelComponent>;
    propertySettingsApplied: EventEmitter<FormProperty>;
    panelTitle: string;
    propertyFormGroup: UntypedFormGroup;
    private propertyType;
    constructor(fb: UntypedFormBuilder, destroyRef: DestroyRef);
    ngOnInit(): void;
    cancel(): void;
    applyPropertySettings(): void;
    private updateValidators;
    private onSelectItemsChange;
    private onMultipleSelectChange;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicFormPropertyPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicFormPropertyPanelComponent, "tb-dynamic-form-property-panel", never, { "isAdd": { "alias": "isAdd"; "required": false; }; "property": { "alias": "property"; "required": false; }; "booleanPropertyIds": { "alias": "booleanPropertyIds"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "popover": { "alias": "popover"; "required": false; }; }, { "propertySettingsApplied": "propertySettingsApplied"; }, never, never, false, never>;
}
