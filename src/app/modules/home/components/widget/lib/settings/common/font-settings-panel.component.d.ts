import { ElementRef, EventEmitter, OnInit } from '@angular/core';
import { PageComponent } from '@shared/components/page.component';
import { ComponentStyle, Font } from '@shared/models/widget-settings.models';
import { TbPopoverComponent } from '@shared/components/popover.component';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class FontSettingsPanelComponent extends PageComponent implements OnInit {
    private fb;
    protected store: Store<AppState>;
    font: Font;
    previewText: string;
    initialPreviewStyle: ComponentStyle;
    clearButton: boolean;
    popover: TbPopoverComponent<FontSettingsPanelComponent>;
    fontApplied: EventEmitter<Font>;
    familyInput: ElementRef;
    fontWeightsList: readonly ["normal", "bold", "bolder", "lighter", "100", "200", "300", "400", "500", "600", "700", "800", "900"];
    fontWeightTranslationsMap: Map<"bold" | "normal" | "lighter" | "900" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "bolder", string>;
    fontStylesList: readonly ["normal", "italic", "oblique"];
    fontStyleTranslationsMap: Map<"normal" | "italic" | "oblique", string>;
    fontFormGroup: UntypedFormGroup;
    filteredFontFamilies: Observable<Array<string>>;
    familySearchText: string;
    previewStyle: ComponentStyle;
    constructor(fb: UntypedFormBuilder, store: Store<AppState>);
    ngOnInit(): void;
    clearFamily(): void;
    cancel(): void;
    applyFont(): void;
    clearDisabled(): boolean;
    clearFont(): void;
    private updatePreviewStyle;
    static ɵfac: i0.ɵɵFactoryDeclaration<FontSettingsPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FontSettingsPanelComponent, "tb-font-settings-panel", never, { "font": "font"; "previewText": "previewText"; "initialPreviewStyle": "initialPreviewStyle"; "clearButton": "clearButton"; "popover": "popover"; }, { "fontApplied": "fontApplied"; }, never, never, false, never>;
}
