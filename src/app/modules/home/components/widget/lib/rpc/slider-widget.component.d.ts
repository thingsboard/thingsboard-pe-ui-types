import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { BasicActionWidgetComponent } from '@home/components/widget/lib/action/action-widget.models';
import { ComponentStyle } from '@shared/models/widget-settings.models';
import { Observable } from 'rxjs';
import { ImagePipe } from '@shared/pipe/image.pipe';
import { DomSanitizer } from '@angular/platform-browser';
import { UtilsService } from '@core/services/utils.service';
import { SliderLayout, SliderWidgetSettings } from '@home/components/widget/lib/rpc/slider-widget.models';
import { WidgetComponent } from '@home/components/widget/widget.component';
import { UnitService } from '@core/services/unit.service';
import * as i0 from "@angular/core";
export declare class SliderWidgetComponent extends BasicActionWidgetComponent implements OnInit, AfterViewInit, OnDestroy {
    protected imagePipe: ImagePipe;
    protected sanitizer: DomSanitizer;
    private renderer;
    private utils;
    private widgetComponent;
    protected cd: ChangeDetectorRef;
    private elementRef;
    private unitService;
    sliderContent: ElementRef<HTMLElement>;
    sliderValueContainer: ElementRef<HTMLElement>;
    sliderValue: ElementRef<HTMLElement>;
    sliderTickMinContainer: ElementRef<HTMLElement>;
    sliderTickMin: ElementRef<HTMLElement>;
    sliderTickMaxContainer: ElementRef<HTMLElement>;
    sliderTickMax: ElementRef<HTMLElement>;
    leftSliderIconContainer: ElementRef<HTMLElement>;
    leftSliderIcon: ElementRef<HTMLElement>;
    rightSliderIconContainer: ElementRef<HTMLElement>;
    rightSliderIcon: ElementRef<HTMLElement>;
    settings: SliderWidgetSettings;
    backgroundStyle$: Observable<ComponentStyle>;
    overlayStyle: ComponentStyle;
    padding: string;
    value: number;
    private prevValue;
    disabled: boolean;
    layout: SliderLayout;
    showValue: boolean;
    valueText: string;
    valueStyle: ComponentStyle;
    showLeftRightIcon: boolean;
    leftIcon: string;
    leftIconStyle: ComponentStyle;
    rightIcon: string;
    rightIconStyle: ComponentStyle;
    showTicks: boolean;
    ticksStyle: ComponentStyle;
    tickMinText: number;
    tickMaxText: number;
    sliderStep: number;
    autoScale: boolean;
    showWidgetTitlePanel: boolean;
    sliderValueText: any;
    private panelResize$;
    private valueSetter;
    private valueFormat;
    private sliderCssClass;
    constructor(imagePipe: ImagePipe, sanitizer: DomSanitizer, renderer: Renderer2, utils: UtilsService, widgetComponent: WidgetComponent, cd: ChangeDetectorRef, elementRef: ElementRef, unitService: UnitService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onInit(): void;
    onSliderChange(): void;
    private _sliderValueText;
    private onValue;
    private updateValueText;
    private onDisabled;
    private onResize;
    private resetScale;
    private updateScale;
    static ɵfac: i0.ɵɵFactoryDeclaration<SliderWidgetComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SliderWidgetComponent, "tb-slider-widget", never, {}, {}, never, never, false, never>;
}
