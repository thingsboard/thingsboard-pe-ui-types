import { AfterViewInit, ChangeDetectorRef, ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { BasicActionWidgetComponent } from '@home/components/widget/lib/action/action-widget.models';
import { ComponentStyle } from '@shared/models/widget-settings.models';
import { Observable } from 'rxjs';
import { ImagePipe } from '@shared/pipe/image.pipe';
import { DomSanitizer } from '@angular/platform-browser';
import { PowerButtonWidgetSettings } from '@home/components/widget/lib/rpc/power-button-widget.models';
import { MatIconRegistry } from '@angular/material/icon';
import * as i0 from "@angular/core";
export declare class PowerButtonWidgetComponent extends BasicActionWidgetComponent implements OnInit, AfterViewInit, OnDestroy {
    protected imagePipe: ImagePipe;
    protected sanitizer: DomSanitizer;
    private renderer;
    private iconRegistry;
    protected cd: ChangeDetectorRef;
    protected zone: NgZone;
    powerButtonShape: ElementRef<HTMLElement>;
    settings: PowerButtonWidgetSettings;
    backgroundStyle$: Observable<ComponentStyle>;
    overlayStyle: ComponentStyle;
    padding: string;
    value: boolean;
    disabled: boolean;
    private shapeResize$;
    private drawSvgShapePending;
    private svgShape;
    private powerButtonSvgShape;
    private disabledState;
    private onValueSetter;
    private offValueSetter;
    constructor(imagePipe: ImagePipe, sanitizer: DomSanitizer, renderer: Renderer2, iconRegistry: MatIconRegistry, cd: ChangeDetectorRef, zone: NgZone);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onInit(): void;
    private onValue;
    private onDisabled;
    private onClick;
    private drawSvg;
    private updateDisabledState;
    private onResize;
    static ɵfac: i0.ɵɵFactoryDeclaration<PowerButtonWidgetComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PowerButtonWidgetComponent, "tb-power-button-widget", never, {}, {}, never, never, false, never>;
}
