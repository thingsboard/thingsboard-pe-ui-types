import { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { ControlValueAccessor, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { MatDialog } from '@angular/material/dialog';
import { WidgetConfigComponent } from '@home/components/widget/widget-config.component';
import { ComparisonResultType, DataKey, DatasourceType, JsonSettingsSchema, Widget } from '@shared/models/widget.models';
import { DataKeyType } from '@shared/models/telemetry/telemetry.models';
import { AggregationType } from '@shared/models/time/time.models';
import { DataKeysCallbacks } from '@home/components/widget/config/data-keys.component.models';
import { TranslateService } from '@ngx-translate/core';
import { TruncatePipe } from '@shared/pipe/truncate.pipe';
import { AggregatedValueCardKeyPosition } from '@home/components/widget/lib/cards/aggregated-value-card.models';
import * as i0 from "@angular/core";
export declare class AggregatedDataKeyRowComponent implements ControlValueAccessor, OnInit, OnChanges {
    private fb;
    private dialog;
    private cd;
    translate: TranslateService;
    truncate: TruncatePipe;
    private widgetConfigComponent;
    aggregatedValueCardKeyPositions: AggregatedValueCardKeyPosition[];
    aggregatedValueCardKeyPositionTranslationMap: Map<AggregatedValueCardKeyPosition, string>;
    dataKeyTypes: typeof DataKeyType;
    aggregationTypes: typeof AggregationType;
    comparisonResultTypes: typeof ComparisonResultType;
    disabled: boolean;
    datasourceType: DatasourceType;
    keyName: string;
    keyRemoved: EventEmitter<any>;
    keyRowFormGroup: UntypedFormGroup;
    modelValue: DataKey;
    valuePreviewFn: any;
    get callbacks(): DataKeysCallbacks;
    get widget(): Widget;
    get latestDataKeySettingsSchema(): JsonSettingsSchema;
    get latestDataKeySettingsDirective(): string;
    get isEntityDatasource(): boolean;
    private propagateChange;
    constructor(fb: UntypedFormBuilder, dialog: MatDialog, cd: ChangeDetectorRef, translate: TranslateService, truncate: TruncatePipe, widgetConfigComponent: WidgetConfigComponent);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    writeValue(value: DataKey): void;
    dataKeyHasPostprocessing(): boolean;
    editKey(): void;
    private updateModel;
    private _valuePreviewFn;
    static ɵfac: i0.ɵɵFactoryDeclaration<AggregatedDataKeyRowComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AggregatedDataKeyRowComponent, "tb-aggregated-data-key-row", never, { "disabled": "disabled"; "datasourceType": "datasourceType"; "keyName": "keyName"; }, { "keyRemoved": "keyRemoved"; }, never, never, false, never>;
}
