import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { EntityComponent } from '../entity/entity.component';
import { FormBuilder, FormGroup } from '@angular/forms';
import { TranslateService } from '@ngx-translate/core';
import { Converter, ConverterDebugInput, ConverterType } from '@shared/models/converter.models';
import { ResourcesService } from '@core/services/resources.service';
import { ConverterService } from '@core/http/converter.service';
import { EntityTableConfig } from '@home/models/entity/entities-table-config.models';
import { MatDialog } from '@angular/material/dialog';
import { ScriptLanguage } from '@shared/models/rule-node.models';
import { IntegrationType } from '@shared/models/integration.models';
import * as i0 from "@angular/core";
export declare class ConverterComponent extends EntityComponent<Converter> implements OnInit, OnDestroy {
    protected store: Store<AppState>;
    protected translate: TranslateService;
    private converterService;
    private dialog;
    private resourcesService;
    protected entityValue: Converter;
    protected entitiesTableConfigValue: EntityTableConfig<Converter>;
    protected fb: FormBuilder;
    protected cd: ChangeDetectorRef;
    private _integrationType;
    hideType: boolean;
    set integrationType(value: IntegrationType);
    get integrationType(): IntegrationType;
    set convertorName(value: string);
    integrationName: string;
    converterType: typeof ConverterType;
    converterTypes: string[];
    converterTypeTranslations: Map<ConverterType, string>;
    tbelEnabled: boolean;
    scriptLanguage: typeof ScriptLanguage;
    private defaultUpdateOnlyKeysByIntegrationType;
    private destroy$;
    constructor(store: Store<AppState>, translate: TranslateService, converterService: ConverterService, dialog: MatDialog, resourcesService: ResourcesService, entityValue: Converter, entitiesTableConfigValue: EntityTableConfig<Converter>, fb: FormBuilder, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    hideDelete(): boolean;
    buildForm(entity: Converter): FormGroup;
    private checkIsNewConverter;
    private updatedOnlyKeysValue;
    private converterTypeChanged;
    private setupDefaultScriptBody;
    updateForm(entity: Converter): void;
    onConverterIdCopied($event: any): void;
    openConverterTestDialog(): void;
    showConverterTestDialog(debugIn: ConverterDebugInput, setFirstTab?: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ConverterComponent, [null, null, null, null, null, { optional: true; }, { optional: true; }, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ConverterComponent, "tb-converter", never, { "hideType": "hideType"; "integrationType": "integrationType"; "convertorName": "convertorName"; "integrationName": "integrationName"; }, {}, never, never, false, never>;
}
